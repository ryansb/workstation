[general]
# Here you define a comma separated list of targets.  Each of them must have a
# section below determining their properties, how to query them, etc.  The name
# is just a symbol, and doesn't have any functional importance.
targets = my_github,rhbz

# If unspecified, the default taskwarrior config will be used.
taskrc = /home/ryansb/.taskrc

# Setting this to true will shorten links with http://da.gd/
shorten = True

# Setting this to True will include a link to the ticket in the description
inline_links = False

# Setting this to True will include a link to the ticket as an annotation
annotation_links = True

# Defines whether or not issues should be matched based upon their description.
# For historical reasons, and by default, we will attempt to match issues
# based upon the presence of the '(bw)' marker in the task description.
# If this is false, we will only select issues having the appropriate UDA
# fields defined
#legacy_matching=False

# log.level specifices the verbosity.  The default is DEBUG.
# log.level can be one of DEBUG, INFO, WARNING, ERROR, CRITICAL, DISABLED
log.level = INFO

# If log.file is specified, output will be redirected there.  If it remains
# unspecified, output is sent to sys.stderr
#log.file = /var/log/bugwarrior.log

# Configure the default description or annotation length.
#annotation_length = 45

# Use hooks to run commands prior to importing from bugwarrior-pull.
# bugwarrior-pull will run the commands in the order that they are specified
# below.
#
# pre_import: The pre_import hook is invoked after all issues have been pulled
# from remote sources, but before they are synced to the TW db. If your
# pre_import script has a non-zero exit code, the `bugwarrior-pull` command will
# exit early.
[hooks]
# pre_import = /home/someuser/backup.sh, /home/someuser/sometask.sh
# This section is for configuring notifications when bugwarrior-pull runs,
# and when issues are created, updated, or deleted by bugwarrior-pull.
# Three backend are currently suported:
#
#  - growlnotify (v2)   Mac OS X   "gntp" must be installed
#  - gobject            Linux      python gobject must be installed
#  - pynotify           Linux      "pynotify" must be installed
#
# To configure, adjust the settings below.  Note that neither of the
# "sticky" options have any effect on Linux with pynotify.  They only work
# for growlnotify.
#[notifications]
#notifications = True
#backend = pynotify
#finished_querying_sticky = False
#task_crud_sticky = True


# This is a github example.  It says, "scrape every issue from every repository
# on http://github.com/ralphbean.  It doesn't matter if ralphbean owns the issue
# or not."
[my_github]
service = github
default_priority = L
add_tags = github

# This specifies that we should pull issues from repositories belonging
# to the 'ralphbean' github account.  See the note below about
# 'github.username' and 'github.login'.  They are different, and you need
# both.
github.username = ryansb

# I want taskwarrior to include issues from all my repos, except these
# two because they're spammy or something.
github.exclude_repos = spacehub,ish,pubkey_police,gitwarrior,netHUD

# Working with a large number of projects, instead of excluding most of them I
# can also simply include just a limited set.
#github.include_repos = project_foo,project_foz

# Note that login and username can be different:  I can login as me, but
# scrape issues from an organization's repos.
#
# - 'github.login' is the username you ask bugwarrior to
#   login as.  Set it to your account.
# - 'github.username' is the github entity you want to pull
#   issues for.  It could be you, or some other user entirely.
github.login = ryansb
github.password = {{ github_password }}

[rhbz]
service = bugzilla
default_priority = L
add_tags = rhbz
bugzilla.username = rybrown@redhat.com
bugzilla.password = {{ rht_password }}
bugzilla.base_uri = bugzilla.redhat.com
bugzilla.ignore_cc = True
bugzilla.include_needinfos = True
bugzilla.open_statuses = NEW,ASSIGNED,NEEDINFO,ON_DEV,REOPENED,FAILS_QA
